name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Determine Fields
        id: fields
        run: |
          fields_json="{}"
          issuetype="Task"

          if [[ -n "${{ steps.issue-parser.outputs.parentKey }}" ]]; then
            fields_json='{"parent": {"key": "${{ steps.issue-parser.outputs.parentKey }}"}}'
            issuetype="Subtask"
          fi

          if [[ -n "${{ steps.issue-parser.outputs.epicKey }}" ]]; then
            fields_json=$(echo $fields_json | jq --arg epic "${{ steps.issue-parser.outputs.epicKey }}" '. + {"customfield_10014": $epic}')
          fi

          echo "fields=$fields_json" >> $GITHUB_ENV
          echo "issuetype=$issuetype" >> $GITHUB_ENV

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: KAN
          issuetype: ${{ env.issuetype }}  # 부모가 없으면 Task, 있으면 Subtask
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: ${{ env.fields }}

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ steps.create.outputs.issue }} ${{ github.event.issue.title }}"
